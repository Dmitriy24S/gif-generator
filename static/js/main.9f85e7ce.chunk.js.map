{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","word","setWord","link","setLink","loader","className","image","src","alt","fetchData","a","fetch","process","response","json","data","images","original","url","Error","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","required","pattern","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA2DeA,MAzDf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAS,qBAAKC,UAAU,WAC1BC,EAAQ,qBAAKC,IAAKL,EAAMM,IAAKN,EAAOF,EAAO,KAEzCS,EAAS,uCAAG,8BAAAC,EAAA,sEAEdX,GAAW,GAFG,SAGSY,MAAM,mDAAD,OACyBC,mCADzB,cACoEZ,IAJlF,cAGRa,EAHQ,gBAMKA,EAASC,OANd,OAMRC,EANQ,OAOdZ,EAAQY,EAAKA,KAAKC,OAAOC,SAASC,KAClCnB,GAAW,GARG,wDAUR,IAAIoB,MAAJ,MAVQ,0DAAH,qDAuBf,OACE,sBAAKd,UAAU,OAAf,UACE,oBAAIA,UAAU,MAAd,2BACA,uBAAMe,SARK,SAACC,GACdA,EAAEC,iBACFb,KAM0BJ,UAAU,iCAAlC,UACE,uBACEkB,KAAK,OACLlB,UAAU,gBACVmB,SAhBa,SAACH,GACpBpB,EAAQoB,EAAEI,OAAOC,QAgBXA,MAAO1B,EACP2B,YAAY,OACZC,UAAQ,EACRC,QAAQ,WAEV,qBAAKxB,UAAU,qBAAf,SACE,wBAAQA,UAAU,mBAAmBkB,KAAK,SAA1C,yBAKJ,qBAAKlB,UAAU,oCAAf,SACGP,EAAUM,EAASE,QChD5BwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f85e7ce.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [word, setWord] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  const loader = <div className=\"loader\"></div>;\n  let image = <img src={link} alt={link ? word : \"\"} />;\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/translate?api_key=${process.env.REACT_APP_WEATHER_API_KEY}&s=${word}`\n      );\n      const data = await response.json();\n      setLink(data.data.images.original.url);\n      setLoading(false);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setWord(e.target.value);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return (\n    <div className=\"App \">\n      <h1 className=\"m-4\">Gif Generator</h1>\n      <form onSubmit={submit} className=\"col-6 mx-auto px-5 input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control \"\n          onChange={handleChange}\n          value={word}\n          placeholder=\"cats\"\n          required\n          pattern=\"\\S+.*\"\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary \" type=\"submit\">\n            Search\n          </button>\n        </div>\n      </form>\n      <div className=\"d-flex justify-content-center m-4\">\n        {loading ? loader : image}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}